import streamlit as st
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np

# Load your pre-trained model
model = load_model('my_model.keras')
class_names = ['Healthy', 'Tomato Mosaic Virus']

# Define a function to preprocess the input image
def preprocess_image(img):
    img = img.resize((150, 150))
    img_array = image.img_to_array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0)
    return img_array

# Define the prediction function
def predict(image):
    img = image.load_img(image, target_size=(150, 150))
    img_array = preprocess_image(img)
    prediction = model.predict(img_array)
    result = class_names[int(np.round(prediction)[0])]
    return result

# Streamlit UI
st.title('Tomato Disease Detection')
uploaded_file = st.file_uploader("Upload an image of a tomato", type=["jpg", "jpeg", "png"])
if uploaded_file is not None:
    st.image(uploaded_file, caption='Uploaded Image', use_column_width=True)
    prediction = predict(uploaded_file)
    st.write(f"Prediction: {prediction}")
